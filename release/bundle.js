var r={d:(t,n)=>{for(var e in n)r.o(n,e)&&!r.o(t,e)&&Object.defineProperty(t,e,{enumerable:!0,get:n[e]})},o:(r,t)=>Object.prototype.hasOwnProperty.call(r,t)},t={};function n(r){return function(r){if(Array.isArray(r))return e(r)}(r)||function(r){if("undefined"!=typeof Symbol&&null!=r[Symbol.iterator]||null!=r["@@iterator"])return Array.from(r)}(r)||function(r,t){if(r){if("string"==typeof r)return e(r,t);var n=Object.prototype.toString.call(r).slice(8,-1);return"Object"===n&&r.constructor&&(n=r.constructor.name),"Map"===n||"Set"===n?Array.from(r):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?e(r,t):void 0}}(r)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function e(r,t){(null==t||t>r.length)&&(t=r.length);for(var n=0,e=new Array(t);n<t;n++)e[n]=r[n];return e}function o(r,t){return 0===r?t:0===t?r:r%t==0?t:o(t,r%t)}function a(r){var t=r.reduce((function(r,t){return o(r,t)}));return r.map((function(r){return 0===t?0:r/t}))}function i(r){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:":";return a(r).join(t)}function u(r){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:":";if(0===r.length)return"";var e=(r=a(r)).reduce((function(r,t){return r+t}),0);if(0===e)return r.join(t);if(r.some((function(r){return r<10&&r>0})))return r.join(t);var o=r.map((function(r){return r/e*100})),u=Math.min.apply(Math,n(o));if(u<3&&u>0)return o.map((function(r){return+Math.round(r/u)})).join(t);var f=(o=o.map((function(r){return Math.round(r)}))).reduce((function(r,t){return r+t}),0),c=Math.max.apply(Math,n(o)),l=o.indexOf(c);return l>-1&&(o[l]+=100-f),i(o,t)}r.d(t,{I9:()=>i,IC:()=>u,ZP:()=>f});const f={simpleRatio:u,simplestRatio:i};var c=t.ZP,l=t.IC,p=t.I9;export{c as default,l as simpleRatio,p as simplestRatio};